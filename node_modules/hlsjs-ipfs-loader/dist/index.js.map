{"version":3,"sources":["webpack:///webpack/bootstrap 34bb068b5d919fdb8148","webpack:///./src/index.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEY;;AAEZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;;AAEA","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 34bb068b5d919fdb8148","'use strict'\n\nclass HlsjsIPFSLoader {\n  constructor(config) {\n    this.ipfs = config.ipfs\n    this.hash = config.ipfsHash\n  }\n\n  destroy() {\n  }\n\n  abort() {\n  }\n\n  load(context, config, callbacks) {\n    this.context = context\n    this.config = config\n    this.callbacks = callbacks\n    this.stats = { trequest: performance.now(), retry: 0 }\n    this.retryDelay = config.retryDelay\n    this.loadInternal()\n  }\n\n  loadInternal() {\n    var stats = this.stats,\n        context = this.context,\n        config = this.config,\n        callbacks = this.callbacks\n\n    stats.tfirst = Math.max(performance.now(), stats.trequest)\n    stats.loaded = 0\n\n    var urlParts = context.url.split(\"/\")\n    var filename = urlParts[urlParts.length - 1]\n\n    getFile(this.ipfs, this.hash, filename, function(err, res) {\n      if (err) {\n        console.log(err);\n        return\n      }\n\n      var data,len\n      if (context.responseType === 'arraybuffer') {\n        data = res\n        len = res.length\n      } else {\n        data = buf2str(res)\n        len = data.length\n      }\n      stats.loaded = stats.total = len\n      stats.tload = Math.max(stats.tfirst, performance.now())\n      var response = { url: context.url, data: data }\n      callbacks.onSuccess(response, stats, context)\n    })\n  }\n}\n\nfunction getFile(ipfs, rootHash, filename, callback) {\n  if (!callback) callback = function (err, res) {}\n  console.log(\"Fetching hash for '\" + rootHash + \"/\" + filename + \"'\")\n  ipfs.object.get(rootHash, function(err, res) {\n    if (err) return callback(err)\n\n    var hash = null\n    var fileSize, fileName\n\n    res.links.forEach(function(link) {\n      if (link.name === filename) {\n        hash = link.cid.toString()\n        fileSize = link.size\n        fileName = link.name\n        return false\n      }\n    });\n\n    if (!hash) {\n      var msg = \"File not found: \" + rootHash + \"/\" + filename\n      return callback(new Error(msg), null)\n    }\n\n    console.log(\"Requesting '\" + rootHash + \"/\" + filename + \"'\")\n\n    var resBuf = new ArrayBuffer(fileSize)\n    var bufView = new Uint8Array(resBuf)\n    var offs = 0\n\n    const stream = ipfs.catReadableStream(hash)\n    console.log(\"Received stream for file '\" + rootHash + \"/\" + fileName + \"'\")\n    stream.on('data', function (chunk) {\n      console.log(\"Received \" + chunk.length + \" bytes for file '\" +\n        rootHash + \"/\" + fileName + \"'\")\n      bufView.set(chunk, offs)\n      offs += chunk.length\n    });\n    stream.on('error', function (err) {\n      callback(err, null)\n    });\n    stream.on('end', function () {\n      callback(null, resBuf)\n    });\n  });\n}\n\nfunction buf2str(buf) {\n  return String.fromCharCode.apply(null, new Uint8Array(buf))\n}\n\nexports = module.exports = HlsjsIPFSLoader\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}